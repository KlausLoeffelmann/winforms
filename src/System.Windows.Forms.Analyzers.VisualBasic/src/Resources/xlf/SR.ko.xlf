<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ko" original="../SR.resx">
    <body>
      <trans-unit id="WFO1000AnalyzerDescription">
        <source>A property should determine its property content serialization with the DesignerSerializationVisibilityAttribute, DefaultValueAttribute or the ShouldSerializeProperty method.</source>
        <target state="translated">속성은 DesignerSerializationVisibilityAttribute, DefaultValueAttribute 또는 ShouldSerializeProperty 메서드를 사용하여 속성 콘텐츠 직렬화를 결정해야 합니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="WFO1000AnalyzerMessageFormat">
        <source>Property '{0}' does not configure the code serialization for its property content</source>
        <target state="translated">'{0}'속성은 해당 속성 콘텐츠에 대한 코드 직렬화를 구성하지 않습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="WFO1000AnalyzerTitle">
        <source>Missing code serialization configuration for property content</source>
        <target state="translated">속성 콘텐츠에 대한 코드 직렬화 구성이 없습니다.</target>
        <note />
      </trans-unit>
      <trans-unit id="WFO2001AnalyzerDescription">
        <source>Please consider not passing a Func&lt;T&gt; to InvokeAsync  where T is a Task or ValueTask, since it will not be awaited. Consider using only Func&lt;CancellationToken, ValueTask&gt; or Func&lt;CancellationToken, ValueTask&lt;T&gt;&gt; for that purpose, so that the function delegate passed to InvokeAsync can be awaited.</source>
        <target state="new">Please consider not passing a Func&lt;T&gt; to InvokeAsync  where T is a Task or ValueTask, since it will not be awaited. Consider using only Func&lt;CancellationToken, ValueTask&gt; or Func&lt;CancellationToken, ValueTask&lt;T&gt;&gt; for that purpose, so that the function delegate passed to InvokeAsync can be awaited.</target>
        <note />
      </trans-unit>
      <trans-unit id="WFO2001AnalyzerMessageFormat">
        <source>Do not pass a Task to InvokeAsync without a cancellation token</source>
        <target state="new">Do not pass a Task to InvokeAsync without a cancellation token</target>
        <note />
      </trans-unit>
      <trans-unit id="WFO2001AnalyzerTitle">
        <source>Do not pass a Task to InvokeAsync without a cancellation token</source>
        <target state="new">Do not pass a Task to InvokeAsync without a cancellation token</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>